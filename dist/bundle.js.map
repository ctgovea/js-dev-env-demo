{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/api/userApi.js","webpack:///./src/api/baseUrl.js","webpack:///./src/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/whatwg-fetch/fetch.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","getUsers","deleteUser","baseUrl","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","getQueryStringParameterByName","fetch","then","onSuccess","onError","id","concat","request","Request","method","response","json","error","console","log","global","_api_userApi__WEBPACK_IMPORTED_MODULE_0__","result","usersBody","forEach","user","firstName","lastName","email","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","attributes","row","parentNode","removeChild","g","this","Function","e","self","support","searchParams","iterable","blob","Blob","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","Headers","append","normalizeName","normalizeValue","oldValue","map","has","set","callback","thisArg","keys","items","push","iteratorFor","values","entries","iterator","methods","clone","body","_bodyInit","Body","Response","status","statusText","headers","type","redirectStatuses","redirect","RangeError","input","init","Promise","resolve","reject","xhr","XMLHttpRequest","onload","rawHeaders","options","getAllResponseHeaders","split","line","parts","shift","trim","join","responseURL","responseText","onerror","TypeError","ontimeout","open","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","next","done","undefined","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","rejected","text","readAsText","chars","length","fromCharCode","readArrayBufferAsText","decode","JSON","parse","upcased","toUpperCase","referrer","form","bytes","bodyInit","ok"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import 'whatwg-fetch';        // polyfill to ensure fetch runs in browsers that don't support fetch natively.\nimport getBaseUrl from './baseUrl';\n\nconst baseUrl = getBaseUrl();\n\nexport function getUsers(){\n  return get('users');\n}\n\nexport function deleteUser(id){\n  return del(`users/${id}`);\n}\n\nfunction get(url){\n  return fetch(baseUrl + url).then(onSuccess, onError);\n}\n\n// Can't call func delete since reserved word.\nfunction del(url){\n  const request = new Request(baseUrl + url, {\n    method: 'DELETE'\n  });\n\n  return fetch(request).then(onSuccess, onError);\n}\n\nfunction onSuccess(response){\n  return response.json();\n}\n\n// Centralized error handling\nfunction onError(error){\n  console.log(error);     // eslint-disable-line no-console\n}\n","export default function getBaseUrl(){\n  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : '/';\n}\n\nfunction getQueryStringParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[[]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n","import {getUsers, deleteUser} from './api/userApi';\n\n// Populate table of users via API call\ngetUsers().then(result =>{\n  let usersBody = '';\n\n  result.forEach(user => {\n    usersBody += `<tr>\n      <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\n      <td>${user.id}</td>\n      <td>${user.firstName}</td>\n      <td>${user.lastName}</td>\n      <td>${user.email}</td>\n      </tr>`\n  });\n\n  global.document.getElementById('users').innerHTML = usersBody;\n\n  const deleteLinks = global.document.getElementsByClassName('deleteUser');\n\n  // Must use array.froim to create a real array from a DOM collection\n  // getElementsByClassname only returns an \"array like\" object\n  Array.from(deleteLinks, link =>{\n    link.onclick = function(event){\n      const element = event.target;\n      event.preventDefault();\n      deleteUser(element.attributes['data-id'].value);\n      const row = element.parentNode.parentNode;\n      row.parentNode.removeChild(row);\n    }\n  });\n\n});\n\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n"],"sourceRoot":""}